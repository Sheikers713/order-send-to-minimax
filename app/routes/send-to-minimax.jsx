// app/routes/send-to-minimax.jsx
import { json } from "@remix-run/node";
import { authenticate } from "../shopify.server";
import { getAccessToken } from "../lib/getAccessToken";
import { getShopifyOrder } from "../lib/getShopifyOrder";
import { createCustomer, createReceivedOrder } from "../lib/minimax";

export async function loader({ request }) {
  const url = new URL(request.url);
  const orderId = url.searchParams.get("id");

  if (!orderId) {
    console.warn("‚ö†Ô∏è orderId –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω");
    return json({ success: false, message: "Missing orderId" }, { status: 400 });
  }

  console.log(`üß™ –í send-to-minimax: –ø–æ–ª—É—á–µ–Ω orderId –∏–∑ URL: ${orderId}`);

  try {
    const authResult = await authenticate.admin(request);

    if ('redirect' in authResult) {
      console.log("üîÅ Shopify —Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏");
      return authResult.redirect;
    }

    const { session } = authResult;
    console.log(`üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ: ${session.shop}`);

    const shopifyOrder = await getShopifyOrder(orderId, session.shop, session.accessToken);
    if (!shopifyOrder) {
      console.warn("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –∏–∑ Shopify");
      return json({ success: false, message: "Failed to fetch order from Shopify" }, { status: 404 });
    }

    console.log("üì¶ –ó–∞–∫–∞–∑ –∏–∑ Shopify –ø–æ–ª—É—á–µ–Ω:", shopifyOrder.name);

    const token = await getAccessToken();
    console.log("üîë –¢–æ–∫–µ–Ω Minimax –ø–æ–ª—É—á–µ–Ω");

    const customerId = await createCustomer(token, shopifyOrder);
    if (!customerId) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞ –≤ Minimax");
      return json({ success: false, message: "Customer creation failed in Minimax" }, { status: 500 });
    }

    console.log("üë§ –ö–ª–∏–µ–Ω—Ç –≤ Minimax —Å–æ–∑–¥–∞–Ω:", customerId);

    const minimaxResponse = await createReceivedOrder(token, shopifyOrder, customerId);
    console.log("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ Minimax:", minimaxResponse);

    return json({ success: true, minimaxResponse });
  } catch (err) {
    console.error("üõë –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è send-to-minimax:", err);
    return json({ success: false, message: "Unexpected error", error: err.message }, { status: 500 });
  }
}